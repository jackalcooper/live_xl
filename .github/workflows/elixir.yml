# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up Elixir
        uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
        with:
          elixir-version: "1.15.2" # [Required] Define the Elixir version
          otp-version: "25" # [Required] Define the Erlang/OTP version
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - name: Run tests
        run: mix test
      - name: Release
        env:
          MIX_ENV: prod
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        run: |
          mix compile
          mix assets.deploy
          mix phx.gen.release
          mix release
      - name: "Tar files"
        id: archive
        run: |
          formatted_date=$(date +'%Y%m%d%H%M')
          archive_file="live_xl_rel_${formatted_date}.tar"
          tar -cvf ${archive_file} _build/prod/rel/live_xl
          echo "archive_file=${archive_file}" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.archive.outputs.archive_file }}
          path: ${{ steps.archive.outputs.archive_file }}
          retention-days: 5
